package Visitor;
import AST.*;
import Types.*;

public interface BaseVisitor{
    public Object visit(AddExpression ae) throws Exception;
    public Object visit(ArrayAssignment aa) throws Exception;
    public Object visit(ArrayReference ar) throws Exception;
    public Object visit(Block b) throws Exception;
    public Object visit(BooleanLiteral bl) throws Exception;
    public Object visit(CharacterLiteral cl) throws Exception;
    public Object visit(EmptyStatement es) throws Exception;
    public Object visit(EqualityExpression ee) throws Exception;
    public Object visit(ExpressionList el) throws Exception;
    public Object visit(ExpressionStatement es) throws Exception;
    public Object visit(FloatLiteral fl) throws Exception;
    public Object visit(FormalParameter fp) throws Exception;
    public Object visit(FormalParameterList fpl) throws Exception;
    public Object visit(FunctionBody fb) throws Exception;
    public Object visit(FunctionCall fc) throws Exception;
    public Object visit(FunctionDeclaration fd) throws Exception;
    public Object visit(Function f) throws Exception;
    public Object visit(Identifier i) throws Exception;
    public Object visit(IdentifierValue iv) throws Exception;
    public Object visit(IfStatement is) throws Exception;
    public Object visit(IntegerLiteral il) throws Exception;
    public Object visit(LessThanExpression lte) throws Exception;
    public Object visit(MultExpression me) throws Exception;
    public Object visit(ParenExpression pe) throws Exception;
    public Object visit(PrintLnStatement pls) throws Exception;
    public Object visit(PrintStatement ps) throws Exception;
    public Object visit(Program p) throws Exception;
    public Object visit(ReturnStatement rs) throws Exception;
    public Object visit(StringLiteral sl) throws Exception;
    public Object visit(SubtractExpression se) throws Exception;
    public Object visit(TypeNode tn) throws Exception;
    public Object visit(UnaryExpression ue) throws Exception;
    public Object visit(VariableAssignment va) throws Exception;
    public Object visit(VariableDeclaration vd) throws Exception;
    public Object visit(WhileStatement ws) throws Exception;
    public Object visit(Type t) throws Exception;
    public Object visit(ArrayType at) throws Exception;
    public Object visit(BooleanType bt) throws Exception;
    public Object visit(CharType ct) throws Exception;
    public Object visit(FloatType ft) throws Exception;
    public Object visit(IntegerType it) throws Exception;
    public Object visit(StringType st) throws Exception;
    public Object visit(VoidType vt) throws Exception;
}
